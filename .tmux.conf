set -g default-terminal "screen-256color"
if '[ `uname` = Darwin ]' 'set -g default-command "reattach-to-user-namespace -l zsh"'
set-option -g default-shell $SHELL
set -g assume-paste-time 0

# tmux 2.1+ mouse configuration
set -g mouse on

# Note to self regarding splits:
# Ctrl+a " - split pane horizontally.
# Ctrl+a % - split pane vertically.
# Ctrl+a arrow key - switch pane.
# Hold Ctrl+a, don't release it and hold one of the arrow keys - resize pane.
# Ctrl+a c - (c)reate a new window.
# Ctrl+a n - move to the (n)ext window.
# Ctrl+a p - move to the (p)revious window.

# Split vertically using the pipe character
bind / split-window -h -c "#{pane_current_path}"

# Split horizontally using the dash
bind - split-window -v -c "#{pane_current_path}"

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key m command-prompt -p "move window to number:" "move-window -t '%%'"
bind-key s command-prompt -p "switch this window with number:" "swap-window -t '%%'"
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Rebind navigating panes/splits to vi movements
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Iistory
set -g history-limit 10000

# Use vi mode keys
setw -g mode-keys vi

# Copy mode
bind ` copy-mode
unbind [
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Source powerline for the default statusbar
run-shell "powerline-daemon -q"
if-shell 'env "$POWERLINE_CONFIG_COMMAND" tmux setup' '' 'run-shell "powerline-config tmux setup"'

# Apply some overrides to the defaults
set-option -g status-position top

# Start counting windows at 1 instead of 0, so the shortcuts for tabs match those of iTerm2
set -g base-index 1

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off
# vim:set ft=tmux:
